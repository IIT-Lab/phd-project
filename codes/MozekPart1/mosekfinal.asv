clc
clear all
close all
clear prob
N_service = 3;
N_server = 2;
Dmax = [1000, 10, 100];
Rmax = [3000, 30, 300];
N_resource = 3; % cpu, ram, storage
demand_service = rand(N_service,N_resource);
resource_server = rand(N_server,N_resource);
demand_service = demand_service.*Dmax; 
resource_server = resource_server.*Rmax;
%%
G = zeros(N_service , N_server * N_service );
G1 = zeros(N_service , N_server * N_service, N_resource);
for i = 1: N_service 
    for j = 1: N_server
        G(i,(N_server)*(i-1) + j) = 1;
        G1(i,(N_server)*(i-1) + j,:) = demand_service(i,:);
    end
end
%%
F = zeros(N_server*N_resource , N_server * N_service );
k =1;
for i = 1: N_server 
    for j = 1:  N_server * N_service
        if mod(j,N_server)==i-1
            F(i,k:k+N_resource-1)=1;
        end
        k = k+1;
    end
end
%%
prob.c = ones(1,N_service*N_server);
prob.a =  [G;F];
prob.blc = [ones(1,N_service),zeros(1,N_server)];
prob.buc = [ones(1,N_service),ones(1,N_server)];
prob.blx = zeros(1,N_service*N_server);
prob.bux = ones(1,N_service*N_server);
% Specify indexes of variables that are integer
% constrained.
prob.ints.sub = 1:N_service*N_server;
[r,res] = mosekopt('minimize',prob);
