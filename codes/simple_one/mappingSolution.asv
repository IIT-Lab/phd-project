% map slice to service
%% sort service
Priot_Service = (sum(Ut2Service,1)).^priority_service;
[~,idx] = sort(Priot_Service);
sort_UtService = Ut2Service(:,idx);
%% sort slice
W_PRB = 3;
W_RRH = 2;
W_VNF = 1;
Priot_Slice = sum(PRB2Slice,1)*W_PRB + sum(rrh2slice,1)*W_RRH + (sum(VNF2Slice1,1)+sum(VNF2Slice2,1))*W_VNF;
[~,idx1] = sort(Priot_Slice);
sort_PRB2Slice = PRB2Slice(:,idx1);
sort_rrh2slice = rrh2slice(:,idx1);
sort_VNF2Slice1 = VNF2Slice1(:,idx1);
sort_VNF2Slice2 = VNF2Slice2(:,idx1);
%% mapping
mapStatus = ones(1,N_Service);
run channel
run precoding
for i = N_Service:-1:1
    for j = N_Slice:-1:1
        if mapStatus(i)==1
            service2slice(i,j)=1;
            run MapPRB2UT
            run interference
            run rate
            run FronthaulCap
            run FindDelay
            rate_service = rate_UE'.*Ut2Service(:,i);
            rateService = rate_service(rate_service>0);
            Crrh_service = Crrh' .* rrh2slice(:,j);
            CrrhSlice = Crrh_service(Crrh_service>0);
            if rateService(:)>Rt && Delay_Slice(j) < delay_max &&
                
            end
        end
    end
end
